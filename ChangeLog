2012-01-19  MIYAMUKO Katsuyuki

	* (create-url): scheme にシンボルを指定可能とした
	(winhttp:create-url :https nil nil "www.google.co.jp" nil nil nil)
	;=> "https://www.google.co.jp"

	* (create-url): すべてのパラメータに nil を指定可能とした
	(winhttp:create-url nil nil nil nil nil nil nil)
	;=> "http://"

2012-01-18  MIYAMUKO Katsuyuki

	* (query-headers): header キーワードを大文字小文字の違いを
	無視するようにした

	* (open-request): verb が空なら GET として処理するようにした

	* (dispatch-event1): :callback-error と :callback-quit イベントの
	呼び出しがエラーになっていたのを修正

2012-01-17  MIYAMUKO Katsuyuki

	* xl-winhttp.api パッケージのニックネームに xl-winhttp を追加

	* (open-request): RFC 2616 に従い、object-name が空の場合は
	"/" を代わりに利用するようにした

2012-01-15  MIYAMUKO Katsuyuki

	* (async.l): 非同期用の処理を追加 (だいたい完成)

2012-01-14  MIYAMUKO Katsuyuki

	* パッケージ構造・ファイル構造を整理
	- xl-winhttp パッケージを xl-winhttp.internal と xl-winhttp.api
	  パッケージに分割
	- winhttp は xl-winhttp.api パッケージのニックネームにした

	* (gc-guard, gc-free): 意味がなかったので削除
	- WinHttpOpen, WinHttpConnect, WinHttpOpenRequest のリファレンスを
	  読む限り引数のバッファを削除するなとは書いていない
	- winhttp:open などの後に chunk の中身を書き換えてみても
	  リクエストには影響はないため内部でコピーしていると思う

	* (toggle-debug): デバッグ出力をビルド時ではなく実行時に切り替え可能とした

2012-01-13  MIYAMUKO Katsuyuki

	* (async.l): 非同期用の処理を追加 (まだ未完成)

	* (src/xl-winhttp-helper): WinHTTP からのコールバックを受け取る
	ヘルパー DLL を追加

2012-01-12  MIYAMUKO Katsuyuki

	* (winhttp-condition-error-keyword): エラーの名前をキーワードでも
	返すようにした
	error-code  error-name                    error-keyword
	----------  ----------------------------  ------------------
	87          ERROR_INVALID_PARAMETER       :invalid-parameter
	12002       ERROR_WINHTTP_TIMEOUT         :timeout
	12009       ERROR_WINHTTP_INVALID_OPTION  :invalid-option
	
	* (expand-flags): バイトコンパイルしていない場合に
	エラーになっていたのを修正

2012-01-11  MIYAMUKO Katsuyuki

	* (hinternet): デバッグ用に HINTERNET ハンドル作成時のパラメータと
	作成時刻を構造体に設定するようにした

	* (set-option, query-option): BOOL 型のオプションをサポート
	WINHTTP_OPTION_ENABLETRACING は MSDN では DWORD 型になっているが、
	実質は BOOL 型なため、BOOL に変更

	* (set-option, query-option): オプション値をキーワードに変換するようにした
	(winhttp:query-option r :security-flags)
	;=> (:secure :strength-strong)

2012-01-10  MIYAMUKO Katsuyuki

	* (open-request): Accept タイプの指定を atom でも list でも指定可能とした
	  (open-request conn "GET" "/" :accept "*/*")
	  (open-request conn "GET" "/" :accept '("image/jpg" "image/png"))

	* (open-request): Accept タイプを指定するキーワード引数の名前を
	  add-request-headers とあわせて :accept-types から :accept に変更

	* フラグをキーワードのリストではなくキーワード引数にした
	  (winhttp:with-open-request (req conn "GET" "/") :secure t)
	    ...)

2012-01-08  MIYAMUKO Katsuyuki

	* (add-request-headers, send-request): ヘッダの指定周りを整理
	- ヘッダを plist や alist で指定できるようにした
	  (add-request-headers request '(:Content-Type "text/html" :X-Yzzy-Version "0.2.2.235"))
	- add-request-headers が動いていなかったのを修正
	- add-request-headers の modifiers 引数をキーワード引数じゃなくて
	  オプショナルな引数にした

	* (query-request-header, query-request-headers)
	(query-response-header, query-response-headers): query-headers 周りを整理
	- リクエストヘッダを取得できるようにした
	  (query-request-header req :user-agent)
	- 取得するデータ型を指定できるようにした
	  (query-response-header req :status-code :type :number)
	  (query-response-header req :status-code :type :system-time)
	  (query-response-header req :status-code :type :universal-time)
	- 複数のヘッダをまとめてリストで取得できるようにした
	  (query-response-headers req :set-cookie)

	* (set-option, query-option): オプションの取得を型を意識せずに出来るようにした
	また、オプションをキーワードで指定出来るようにした
	現状は DWORD と WSTR 型のオプションのみサポートしている

	* (time-from-universal-time, time-to-universal-time): 追加

	* (time-from-system-time, time-to-system-time): 戻り値と引数の形式を
	decoded time 形式にした

2012-01-07  MIYAMUKO Katsuyuki

	* (crack-url): :decode または :escape フラグを指定された場合に
	エラーになっていたのを修正

	* (make-WSTR): WSTR の最後の NULL 文字が一つ足りなくて、
	ときどきエラーになっていたのを修正

2012-01-06  MIYAMUKO Katsuyuki

	* (winhttp:connect): ポート番号を optional にした。
	winhttp:open-request の flags に :secure を指定した場合は 443 番が、
	指定しない場合は 80 番が自動的に選択される。

	* オプションをキーワードで指定できるようにした
	  (winhttp:with-open-request (req conn "GET" "/") :flags :secure)
	    ...)

	* (winhttp:reset-auto-proxy): WinHttpResetAutoProxy も Windows 8 からの
	API だったため実装を削除した

2012-01-05  MIYAMUKO Katsuyuki

	* ひととおり API を実装。
	WinHttpCreateProxyResolver, WinHttpGetProxyForUrlEx は Windows 8
	からの API で動作確認ができていないので未実装。

2011-12-27  MIYAMUKO Katsuyuki

	* xl-winhttp 作成開始

